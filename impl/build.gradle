plugins {
    id 'java-library'
    id 'maven-publish'
    id 'idea'
}

configurations {
    testUtil
    dataModel
}

sourceSets {
    dataModel {
        //to demonstrate a publication with a separate pom file
        java {
            srcDirs = ['src/dataModel/java']
        }
    }

    testUtil {
        //to demonstrate a publication with a classifier
        compileClasspath += configurations.testCompile
        java {
            srcDirs = ['src/testUtil/java']
        }
    }

    test {
        compileClasspath += sourceSets.testUtil.output
        runtimeClasspath += sourceSets.testUtil.output
    }
}

dependencies {
    api project(":api")
    api 'org.apache.commons:commons-math3:3.6.1'
    implementation 'com.google.guava:guava:23.0'

    testImplementation 'junit:junit:4.12'
}

task testUtilJar(type: Jar) {
    from sourceSets.testUtil.output
    classifier 'testUtil'
}

task dataModelJar(type: Jar) {
    from sourceSets.dataModel.output
    baseName 'impl-data-model'
}

artifacts {
    testUtil testUtilJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            // 'mavenJava' is preconfigured with Shipkit plugin,
            // we just need to add an extra artifact that has a different classifier
            artifact tasks.testUtilJar
        }

        dataModel(MavenPublication) {
            from components.java //ensures that the dependencies are included in the generated pom file
            artifactId 'impl-data-model'
            artifacts = [artifact(tasks.dataModelJar)] //overwrites the default artifact
        }
    }
}

idea {
    module {
        sourceDirs += file('src/dataModel/java')
        sourceDirs += file('src/testUtil/java')
    }
}
